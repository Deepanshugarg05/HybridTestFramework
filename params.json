{"name":"HybridTestFramewrok","tagline":"End to End automation testing of Web, API and Security","body":"# HybridTestFramewrok\r\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/2ffd9c97725645c2bcda860988dc0baf)](https://www.codacy.com/manual/dipjyotimetia/HybridTestFramewrok?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=dipjyotimetia/HybridTestFramewrok&amp;utm_campaign=Badge_Grade)\r\n[![This project is using Percy.io for visual regression testing.](https://percy.io/static/images/percy-badge.svg)](https://percy.io/CypressTest/Selenium)\r\n![HybridTestFramework](https://github.com/dipjyotimetia/HybridTestFramewrok/workflows/HybridTestFramework/badge.svg)\r\n[![Build Status](https://dev.azure.com/dipjyoti/OpensourceProjects/_apis/build/status/dipjyotimetia.HybridTestFramewrok?branchName=master)](https://dev.azure.com/dipjyoti/OpensourceProjects/_build/latest?definitionId=7&branchName=master)  \r\n[![SupportedBy JetBrains](https://github.com/TestautoDev/Tricks-And-Tips/blob/master/jetbrains.svg)](https://www.jetbrains.com/?from=HybridTestFramework)  \r\n### Full fledged WEB, API and Security testing framework using selenium,ZAP OWASP proxy and rest-assured\r\n\r\n<img src=\"https://github.com/dipjyotimetia/HybridTestFramewrok/blob/master/Docs/screens/selenium.png\" width=\"800\">  \r\n\r\n### Supported Platforms  \r\nThis framework supports WebUi automation across a variety of browsers like Chrome, Firefox, IE, no only limited to this but extended to test rest api, security and visual testing.\r\n\r\n### Capabilities\r\n* Cross browser testing support\r\n* Added browserstack support for CrossBrowser testing\r\n* Running tests in docker containers selenium grid\r\n* Running tests in AWS DeviceFarm selenium grid\r\n* Running tests in selenium server in docker containers\r\n* Security testing using OWASP, running in docker container\r\n* Api testing support using RestAssured\r\n* Visual regression testing using percy.io\r\n* Accessibility testing using axe-selenium\r\n* Stubbed api testing using WireMock\r\n* Can send logs to ElasticSearch for kibana dashboard visualization\r\n* Database testing support(Coming Soon...)\r\n* Kubernetes support(Coming soon...)   \r\n    \r\n### Setup & Tools\r\n* Install intellij\r\n  https://www.jetbrains.com/idea/download/\r\n* Install docker desktop \r\n  https://www.docker.com/products/docker-desktop    \r\n* Java SDK  \r\n  https://docs.aws.amazon.com/corretto/latest/corretto-8-ug/downloads-list.html or any latest version.\r\n* Gradle\r\n  https://gradle.org/next-steps/?version=6.4&format=bin\r\n* Allure\r\n  https://github.com/allure-framework/allure2/archive/2.13.3.zip    \r\n* Set Environment variables      \r\n    * JAVA_HOME: Pointing to the Java SDK folder\\bin\r\n    * GRADLE_HOME: Pointing to Gradle directory\\bin.\r\n    * ALLURE_HOME: Pointing to allure directory\\bin.\r\n \r\n### Getting Started\r\n```shell script\r\n$ git clone \r\n$ cd \r\n$ import project from intellij as a gradle project\r\n$ gradle clean\r\n$ gradle build\r\n$ gradle task E2E\r\n$ gradle allureReport\r\n$ gradle allureServe\r\n```\r\n\r\n### Write your first user journey\r\nCreate new class and name as the TC00*_E2E_TEST-***\r\n - Provide jira link in @Link\r\n - Provide all the api components as @Feature\r\n - Provide test severity and description\r\n - Write test\r\n - Use CatchBlock in try/catch section\r\n\r\n### Spawns chrome, firefox, selenium hub and OWASP proxy server    \r\n```shell script\r\n$ docker-compose up -d\r\n```\r\n\r\n### Complete infrastructure creation for local run\r\n```shell script\r\n$ $ docker-compose -f docker-compose-infra up -d\r\n```\r\n\r\n### Spawns four additional node-chrome/firefox instances linked to the hub\r\n```shell script\r\n$ docker-compose scale chrome=5\r\n$ docker-compose scale firefox=5\r\n```\r\n\r\nError Handle for dynamic classpath error in intellij:\r\nSearch and modify the below line in .idea workspace.xml\r\n```xml\r\n<component name=\"PropertiesComponent\">\r\n    <property name=\"dynamic.classpath\" value=\"true\" />\r\n</component>\r\n```\r\n## Screens\r\n### Framework Structure\r\n<img src=\"https://github.com/dipjyotimetia/HybridTestFramewrok/blob/master/Docs/screens/projectStructure.png\" width=\"400\">  \r\n\r\n### JenkinsExecution\r\n<img src=\"https://github.com/dipjyotimetia/HybridTestFramewrok/blob/master/Docs/screens/jenkinsExecution.png\" width=\"700\">  \r\n\r\n### GridServer 2.0\r\n<img src=\"https://github.com/dipjyotimetia/HybridTestFramewrok/blob/master/Docs/screens/seleniumGrid.png\" width=\"500\">  \r\n\r\n### Allure Reporting\r\n<img src=\"https://github.com/dipjyotimetia/HybridTestFramewrok/blob/master/Docs/screens/allureReport.png\" width=\"700\">  \r\n\r\n### Gradle Report\r\n<img src=\"https://github.com/dipjyotimetia/HybridTestFramewrok/blob/master/Docs/screens/gradleReport.png\" width=\"700\">  \r\n\r\n### TestResults\r\n<img src=\"https://github.com/dipjyotimetia/HybridTestFramewrok/blob/master/Docs/screens/testResults.png\" width=\"600\">    \r\n\r\n### BrowserStack Dashboard\r\n<img src=\"https://github.com/dipjyotimetia/HybridTestFramewrok/blob/master/Docs/screens/browserStack.png\" width=\"600\">    \r\n\r\n### LogsView\r\n<img src=\"https://github.com/dipjyotimetia/HybridTestFramewrok/blob/master/Docs/screens/logs.png\" width=\"700\">    \r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}