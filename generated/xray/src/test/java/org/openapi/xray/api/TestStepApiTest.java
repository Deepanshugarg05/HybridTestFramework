/*
 * Xray REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapi.xray.api;

import org.openapi.xray.invoker.ApiException;
import org.openapi.xray.model.CreateStepRequestBody;
import org.openapi.xray.model.CreateStepResponse;
import org.openapi.xray.model.Error;
import org.openapi.xray.model.FileResponse;
import org.openapi.xray.model.StepResponse;
import org.openapi.xray.model.TestStepsResponse;
import org.openapi.xray.model.UpdateStepRequestBody;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TestStepApi
 */
@Ignore
public class TestStepApiTest {

    private final TestStepApi api = new TestStepApi();

    
    /**
     * 
     *
     * Returns all the steps of a test issue given the key. The response contains for each step the corresponding id, index, fields and the attachments. &lt;br /&gt; &lt;br /&gt; The Test Step fields are identified by their name and can be of type _Data_ (Toggle, Number, Date and Date Time fields), _Option_ (Single Select, Multiple Select and Radio Button fields), _Wiki_ (Native fields, Single and Multiple Line fields). &lt;br /&gt; &lt;br /&gt; The value of step fields of type _Wiki_ have a raw and rendered value. _Option_ fields value will be an array containing the information of the selected options (the option id and its value).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testTestKeyStepsGetTest() throws ApiException {
        String testKey = null;
                TestStepsResponse response = api.testTestKeyStepsGet(testKey);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Create a new test step. All step fields values are listed under _fields_ and identified by the name and a list of attachments to add to the step. The field values should follow a certain format according to the custom field type. &lt;br /&gt;&lt;br /&gt; - **Toggle Fields** values should be _\&quot;true\&quot;_, _\&quot;false\&quot;_, _\&quot;0\&quot;_ or _\&quot;1\&quot;_ &lt;br /&gt;&lt;br /&gt; - **Number Fields** values should be a string containing a number, e.g. _\&quot;320\&quot;_. Decimal Number are also accepted,for instance, \&quot;320.5\&quot;. The decimal places are always separated by a _\&quot;.\&quot;_ &lt;br /&gt; &lt;br /&gt; - **Single Select and Radio Button Fields** values should be a single string containing the option value, e.g. _\&quot;Option A\&quot;_. The value should be a valid option for that custom field. The values are not case sensitive. &lt;br /&gt;&lt;br /&gt; - **Multiple Select Fields** values should be an array of the string of option values, e.g. _[\&quot;Option A\&quot;, \&quot;Option B\&quot;]_. All the selected values should be valid for that custom field. The option values are not case sensitive. &lt;br /&gt;&lt;br /&gt; - **Date Fields** should follow the ISO format _yyyy-MM-dd_, where _yyyy_ represents the year, _MM_ the month in year and _dd_ the day in the month. For instance, a valid value would be _\&quot;2020-05-02\&quot;_. &lt;br /&gt;&lt;br /&gt; - **Date Time fields** should be in UTC following the ISO format _yyyy-MM-dd&#39;T&#39;HH:mm&#39;Z&#39;_. The date part follows the same date format, while _HH_ represents the hours (0-24), _mm_ the minutes in hour and _Z_ indicates the hour in UTC. For instance, a valid date time value would be _\&quot;2020-05-02T10:30Z\&quot;_. &lt;br /&gt;&lt;br /&gt; The remaining field types values do not required a specific validation. For instance, for a Single Line Custom field a valid value would be _\&quot;Perform Action B\&quot;_. &lt;br /&gt;&lt;br /&gt; If some value is not valid for a certain custom field type, an error will be return stating the field with the incorrect value. Furthermore, **all required step fields must be provided**.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testTestKeyStepsPostTest() throws ApiException {
        String testKey = null;
        CreateStepRequestBody createStepRequestBody = null;
                CreateStepResponse response = api.testTestKeyStepsPost(testKey, createStepRequestBody);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Deletes a test step attachment, given the test key and step and attachment ids.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testTestKeyStepsStepIdAttachmentAttachmentIdDeleteTest() throws ApiException {
        String testKey = null;
        Integer stepId = null;
        Integer attachmentId = null;
                api.testTestKeyStepsStepIdAttachmentAttachmentIdDelete(testKey, stepId, attachmentId);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns all the attachments of a test step, given the test key and step id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testTestKeyStepsStepIdAttachmentsGetTest() throws ApiException {
        String testKey = null;
        Integer stepId = null;
                List<FileResponse> response = api.testTestKeyStepsStepIdAttachmentsGet(testKey, stepId);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Deletes a test step given the test key and the step id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testTestKeyStepsStepIdDeleteTest() throws ApiException {
        String testKey = null;
        Integer stepId = null;
                api.testTestKeyStepsStepIdDelete(testKey, stepId);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns the values of a single test step, given the test key and the step id. The response follows the same format as the previous endpoints, containing the step id, index, fields and the attachments. &lt;br /&gt; &lt;br /&gt; The Test Step fields are identified by their name and can be of type _Data_ (Toggle, Number, Date and Date Time fields), _Option_ (Single Select, Multiple Select and Radio Button fields), _Wiki_ (Native fields, Single and Multiple Line fields). &lt;br /&gt; &lt;br /&gt; The value of step fields of type _Wiki_ have a raw and rendered value. _Option_ fields value will be an array containing the information of the selected options (the option id and its value).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testTestKeyStepsStepIdGetTest() throws ApiException {
        String testKey = null;
        Integer stepId = null;
                StepResponse response = api.testTestKeyStepsStepIdGet(testKey, stepId);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Updates the values of an existing test step, given the test key and step id. The user can update the field values and the attachments of a step. The values should follow a specific format similar to the step creation. &lt;br/&gt;&lt;br/&gt; - **Toggle Fields** values should be _\&quot;true\&quot;_, _\&quot;false\&quot;_, _\&quot;0\&quot;_ or _\&quot;1\&quot;_ &lt;br /&gt;&lt;br /&gt; - **Number Fields** values should be a string containing a number, e.g. _\&quot;320\&quot;_. Decimal Number are also accepted,for instance, \&quot;320.5\&quot;. The decimal places are always separated by a _\&quot;.\&quot;_ &lt;br /&gt; &lt;br /&gt; - **Single Select and Radio Button Fields** values should be a single string containing the option value, e.g. _\&quot;Option A\&quot;_. The value should be a valid option for that custom field. The values are not case sensitive. &lt;br /&gt;&lt;br /&gt; - **Multiple Select Fields** values should be an array of the string of option values, e.g. _[\&quot;Option A\&quot;, \&quot;Option B\&quot;]_. All the selected values should be valid for that custom field. The option values are not case sensitive. &lt;br /&gt;&lt;br /&gt; - **Date Fields** should follow the ISO format _yyyy-MM-dd_, where _yyyy_ represents the year, _MM_ the month in year and _dd_ the day in the month. For instance, a valid value would be _\&quot;2020-05-02\&quot;_. &lt;br /&gt;&lt;br /&gt; - **Date Time fields** should be in UTC following the ISO format _yyyy-MM-dd&#39;T&#39;HH:mm&#39;Z&#39;_. The date part follows the same date format, while _HH_ represents the hours (0-24), _mm_ the minutes in hour and _Z_ indicates the hour in UTC. For instance, a valid date time value would be _\&quot;2020-05-02T10:30Z\&quot;_. &lt;br /&gt;&lt;br /&gt; The remaining field types values do not required a specific validation. For instance, for a Single Line Custom field a valid value would be _\&quot;Perform Action B\&quot;_. &lt;br /&gt;&lt;br /&gt; If some value is not valid for a certain custom field type, an error will be return stating the field with the incorrect value. A field value can be deleted sending an empty value, such as _\&quot;\&quot;_ or _[]_, or by sending _null_. **It is not possible to delete the value of a required field.**
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testTestKeyStepsStepIdPutTest() throws ApiException {
        String testKey = null;
        Integer stepId = null;
        UpdateStepRequestBody updateStepRequestBody = null;
                CreateStepResponse response = api.testTestKeyStepsStepIdPut(testKey, stepId, updateStepRequestBody);
        // TODO: test validations
    }
    
}
