/*
 * Xray REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapi.xray.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapi.xray.model.RestApiSuccessResponseTestExecIssue;
import org.openapi.xray.model.RestApiSuccessResponseTestIssues;
import org.openapi.xray.model.RestApiSuccessResponseTestRunWarnings;

/**
 * RestApiSuccessResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-27T23:50:23.072934600+11:00[Australia/Sydney]")
public class RestApiSuccessResponse {
  public static final String SERIALIZED_NAME_TEST_EXEC_ISSUE = "testExecIssue";
  @SerializedName(SERIALIZED_NAME_TEST_EXEC_ISSUE)
  private RestApiSuccessResponseTestExecIssue testExecIssue;

  public static final String SERIALIZED_NAME_TEST_ISSUES = "testIssues";
  @SerializedName(SERIALIZED_NAME_TEST_ISSUES)
  private RestApiSuccessResponseTestIssues testIssues;

  public static final String SERIALIZED_NAME_TEST_WARNINGS = "testWarnings";
  @SerializedName(SERIALIZED_NAME_TEST_WARNINGS)
  private List<String> testWarnings = null;

  public static final String SERIALIZED_NAME_TEST_RUN_WARNINGS = "testRunWarnings";
  @SerializedName(SERIALIZED_NAME_TEST_RUN_WARNINGS)
  private List<RestApiSuccessResponseTestRunWarnings> testRunWarnings = null;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public RestApiSuccessResponse() { 
  }

  public RestApiSuccessResponse testExecIssue(RestApiSuccessResponseTestExecIssue testExecIssue) {
    
    this.testExecIssue = testExecIssue;
    return this;
  }

   /**
   * Get testExecIssue
   * @return testExecIssue
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public RestApiSuccessResponseTestExecIssue getTestExecIssue() {
    return testExecIssue;
  }


  public void setTestExecIssue(RestApiSuccessResponseTestExecIssue testExecIssue) {
    this.testExecIssue = testExecIssue;
  }


  public RestApiSuccessResponse testIssues(RestApiSuccessResponseTestIssues testIssues) {
    
    this.testIssues = testIssues;
    return this;
  }

   /**
   * Get testIssues
   * @return testIssues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RestApiSuccessResponseTestIssues getTestIssues() {
    return testIssues;
  }


  public void setTestIssues(RestApiSuccessResponseTestIssues testIssues) {
    this.testIssues = testIssues;
  }


  public RestApiSuccessResponse testWarnings(List<String> testWarnings) {
    
    this.testWarnings = testWarnings;
    return this;
  }

  public RestApiSuccessResponse addTestWarningsItem(String testWarningsItem) {
    if (this.testWarnings == null) {
      this.testWarnings = new ArrayList<>();
    }
    this.testWarnings.add(testWarningsItem);
    return this;
  }

   /**
   * Get testWarnings
   * @return testWarnings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getTestWarnings() {
    return testWarnings;
  }


  public void setTestWarnings(List<String> testWarnings) {
    this.testWarnings = testWarnings;
  }


  public RestApiSuccessResponse testRunWarnings(List<RestApiSuccessResponseTestRunWarnings> testRunWarnings) {
    
    this.testRunWarnings = testRunWarnings;
    return this;
  }

  public RestApiSuccessResponse addTestRunWarningsItem(RestApiSuccessResponseTestRunWarnings testRunWarningsItem) {
    if (this.testRunWarnings == null) {
      this.testRunWarnings = new ArrayList<>();
    }
    this.testRunWarnings.add(testRunWarningsItem);
    return this;
  }

   /**
   * Get testRunWarnings
   * @return testRunWarnings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RestApiSuccessResponseTestRunWarnings> getTestRunWarnings() {
    return testRunWarnings;
  }


  public void setTestRunWarnings(List<RestApiSuccessResponseTestRunWarnings> testRunWarnings) {
    this.testRunWarnings = testRunWarnings;
  }


  public RestApiSuccessResponse message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestApiSuccessResponse restApiSuccessResponse = (RestApiSuccessResponse) o;
    return Objects.equals(this.testExecIssue, restApiSuccessResponse.testExecIssue) &&
        Objects.equals(this.testIssues, restApiSuccessResponse.testIssues) &&
        Objects.equals(this.testWarnings, restApiSuccessResponse.testWarnings) &&
        Objects.equals(this.testRunWarnings, restApiSuccessResponse.testRunWarnings) &&
        Objects.equals(this.message, restApiSuccessResponse.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(testExecIssue, testIssues, testWarnings, testRunWarnings, message);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestApiSuccessResponse {\n");
    sb.append("    testExecIssue: ").append(toIndentedString(testExecIssue)).append("\n");
    sb.append("    testIssues: ").append(toIndentedString(testIssues)).append("\n");
    sb.append("    testWarnings: ").append(toIndentedString(testWarnings)).append("\n");
    sb.append("    testRunWarnings: ").append(toIndentedString(testRunWarnings)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

