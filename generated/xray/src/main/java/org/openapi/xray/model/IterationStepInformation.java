/*
 * Xray REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapi.xray.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapi.xray.model.DataField;
import org.openapi.xray.model.OneOfDataFieldOptionFieldWikiField;
import org.openapi.xray.model.OptionField;
import org.openapi.xray.model.WikiField;

/**
 * IterationStepInformation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-27T23:50:23.072934600+11:00[Australia/Sydney]")
public class IterationStepInformation {
  public static final String SERIALIZED_NAME_INDEX = "index";
  @SerializedName(SERIALIZED_NAME_INDEX)
  private Integer index;

  public static final String SERIALIZED_NAME_FIELDS = "fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  private Map<String, OneOfDataFieldOptionFieldWikiField> fields = null;

  public IterationStepInformation() { 
  }

  public IterationStepInformation index(Integer index) {
    
    this.index = index;
    return this;
  }

   /**
   * Get index
   * @return index
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getIndex() {
    return index;
  }


  public void setIndex(Integer index) {
    this.index = index;
  }


  public IterationStepInformation fields(Map<String, OneOfDataFieldOptionFieldWikiField> fields) {
    
    this.fields = fields;
    return this;
  }

  public IterationStepInformation putFieldsItem(String key, OneOfDataFieldOptionFieldWikiField fieldsItem) {
    if (this.fields == null) {
      this.fields = new HashMap<>();
    }
    this.fields.put(key, fieldsItem);
    return this;
  }

   /**
   * Get fields
   * @return fields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"Action\":{\"type\":\"Wiki\",\"value\":{\"raw\":\"When prompted to login I fill the username field with John and the password with 12345\",\"rendered\":\"<p>When prompted to login I fill the username field with John and the password with 12345</p>\"}},\"Expected Result\":{\"type\":\"Wiki\",\"value\":{\"raw\":\"I'm authenticated!\",\"rendered\":\"<p>I'm authenticated!</p>\"}}}", value = "")

  public Map<String, OneOfDataFieldOptionFieldWikiField> getFields() {
    return fields;
  }


  public void setFields(Map<String, OneOfDataFieldOptionFieldWikiField> fields) {
    this.fields = fields;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IterationStepInformation iterationStepInformation = (IterationStepInformation) o;
    return Objects.equals(this.index, iterationStepInformation.index) &&
        Objects.equals(this.fields, iterationStepInformation.fields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(index, fields);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IterationStepInformation {\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

