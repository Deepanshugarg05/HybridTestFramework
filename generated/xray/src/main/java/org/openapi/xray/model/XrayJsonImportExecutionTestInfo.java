/*
 * Xray REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapi.xray.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * XrayJsonImportExecutionTestInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-27T23:50:23.072934600+11:00[Australia/Sydney]")
public class XrayJsonImportExecutionTestInfo {
  public static final String SERIALIZED_NAME_TEST_TYPE = "testType";
  @SerializedName(SERIALIZED_NAME_TEST_TYPE)
  private String testType;

  public static final String SERIALIZED_NAME_PROJECT_KEY = "projectKey";
  @SerializedName(SERIALIZED_NAME_PROJECT_KEY)
  private String projectKey;

  public static final String SERIALIZED_NAME_SUMMARY = "summary";
  @SerializedName(SERIALIZED_NAME_SUMMARY)
  private String summary;

  public static final String SERIALIZED_NAME_SCENARIO_TYPE = "scenarioType";
  @SerializedName(SERIALIZED_NAME_SCENARIO_TYPE)
  private String scenarioType;

  public static final String SERIALIZED_NAME_SCENARIO = "scenario";
  @SerializedName(SERIALIZED_NAME_SCENARIO)
  private String scenario;

  public static final String SERIALIZED_NAME_DEFINITION = "definition";
  @SerializedName(SERIALIZED_NAME_DEFINITION)
  private String definition;

  public static final String SERIALIZED_NAME_REQUIREMENT_KEYS = "requirementKeys";
  @SerializedName(SERIALIZED_NAME_REQUIREMENT_KEYS)
  private String requirementKeys;

  public XrayJsonImportExecutionTestInfo() { 
  }

  public XrayJsonImportExecutionTestInfo testType(String testType) {
    
    this.testType = testType;
    return this;
  }

   /**
   * Get testType
   * @return testType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTestType() {
    return testType;
  }


  public void setTestType(String testType) {
    this.testType = testType;
  }


  public XrayJsonImportExecutionTestInfo projectKey(String projectKey) {
    
    this.projectKey = projectKey;
    return this;
  }

   /**
   * Get projectKey
   * @return projectKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProjectKey() {
    return projectKey;
  }


  public void setProjectKey(String projectKey) {
    this.projectKey = projectKey;
  }


  public XrayJsonImportExecutionTestInfo summary(String summary) {
    
    this.summary = summary;
    return this;
  }

   /**
   * Get summary
   * @return summary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSummary() {
    return summary;
  }


  public void setSummary(String summary) {
    this.summary = summary;
  }


  public XrayJsonImportExecutionTestInfo scenarioType(String scenarioType) {
    
    this.scenarioType = scenarioType;
    return this;
  }

   /**
   * Get scenarioType
   * @return scenarioType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getScenarioType() {
    return scenarioType;
  }


  public void setScenarioType(String scenarioType) {
    this.scenarioType = scenarioType;
  }


  public XrayJsonImportExecutionTestInfo scenario(String scenario) {
    
    this.scenario = scenario;
    return this;
  }

   /**
   * Get scenario
   * @return scenario
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getScenario() {
    return scenario;
  }


  public void setScenario(String scenario) {
    this.scenario = scenario;
  }


  public XrayJsonImportExecutionTestInfo definition(String definition) {
    
    this.definition = definition;
    return this;
  }

   /**
   * Get definition
   * @return definition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDefinition() {
    return definition;
  }


  public void setDefinition(String definition) {
    this.definition = definition;
  }


  public XrayJsonImportExecutionTestInfo requirementKeys(String requirementKeys) {
    
    this.requirementKeys = requirementKeys;
    return this;
  }

   /**
   * Get requirementKeys
   * @return requirementKeys
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRequirementKeys() {
    return requirementKeys;
  }


  public void setRequirementKeys(String requirementKeys) {
    this.requirementKeys = requirementKeys;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    XrayJsonImportExecutionTestInfo xrayJsonImportExecutionTestInfo = (XrayJsonImportExecutionTestInfo) o;
    return Objects.equals(this.testType, xrayJsonImportExecutionTestInfo.testType) &&
        Objects.equals(this.projectKey, xrayJsonImportExecutionTestInfo.projectKey) &&
        Objects.equals(this.summary, xrayJsonImportExecutionTestInfo.summary) &&
        Objects.equals(this.scenarioType, xrayJsonImportExecutionTestInfo.scenarioType) &&
        Objects.equals(this.scenario, xrayJsonImportExecutionTestInfo.scenario) &&
        Objects.equals(this.definition, xrayJsonImportExecutionTestInfo.definition) &&
        Objects.equals(this.requirementKeys, xrayJsonImportExecutionTestInfo.requirementKeys);
  }

  @Override
  public int hashCode() {
    return Objects.hash(testType, projectKey, summary, scenarioType, scenario, definition, requirementKeys);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class XrayJsonImportExecutionTestInfo {\n");
    sb.append("    testType: ").append(toIndentedString(testType)).append("\n");
    sb.append("    projectKey: ").append(toIndentedString(projectKey)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    scenarioType: ").append(toIndentedString(scenarioType)).append("\n");
    sb.append("    scenario: ").append(toIndentedString(scenario)).append("\n");
    sb.append("    definition: ").append(toIndentedString(definition)).append("\n");
    sb.append("    requirementKeys: ").append(toIndentedString(requirementKeys)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

