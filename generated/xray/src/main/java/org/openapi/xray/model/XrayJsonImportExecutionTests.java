/*
 * Xray REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapi.xray.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapi.xray.model.OneOfUpdateTestRunCustomFieldSingleUpdateTestRunCustomFieldMulti;
import org.openapi.xray.model.UpdateTestRunCustomFieldMulti;
import org.openapi.xray.model.UpdateTestRunCustomFieldSingle;
import org.openapi.xray.model.XrayJsonImportExecutionEvidences;
import org.openapi.xray.model.XrayJsonImportExecutionResults;
import org.openapi.xray.model.XrayJsonImportExecutionSteps;
import org.openapi.xray.model.XrayJsonImportExecutionTestInfo;

/**
 * XrayJsonImportExecutionTests
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-27T23:50:23.072934600+11:00[Australia/Sydney]")
public class XrayJsonImportExecutionTests {
  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_FINISH = "finish";
  @SerializedName(SERIALIZED_NAME_FINISH)
  private String finish;

  public static final String SERIALIZED_NAME_START = "start";
  @SerializedName(SERIALIZED_NAME_START)
  private String start;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "customFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private List<OneOfUpdateTestRunCustomFieldSingleUpdateTestRunCustomFieldMulti> customFields = null;

  public static final String SERIALIZED_NAME_TEST_INFO = "testInfo";
  @SerializedName(SERIALIZED_NAME_TEST_INFO)
  private XrayJsonImportExecutionTestInfo testInfo;

  public static final String SERIALIZED_NAME_TEST_KEY = "testKey";
  @SerializedName(SERIALIZED_NAME_TEST_KEY)
  private String testKey;

  public static final String SERIALIZED_NAME_EXECUTED_BY = "executedBy";
  @SerializedName(SERIALIZED_NAME_EXECUTED_BY)
  private String executedBy;

  public static final String SERIALIZED_NAME_EVIDENCES = "evidences";
  @SerializedName(SERIALIZED_NAME_EVIDENCES)
  private List<XrayJsonImportExecutionEvidences> evidences = null;

  public static final String SERIALIZED_NAME_RESULTS = "results";
  @SerializedName(SERIALIZED_NAME_RESULTS)
  private List<XrayJsonImportExecutionResults> results = null;

  public static final String SERIALIZED_NAME_EXAMPLES = "examples";
  @SerializedName(SERIALIZED_NAME_EXAMPLES)
  private List<String> examples = null;

  public static final String SERIALIZED_NAME_STEPS = "steps";
  @SerializedName(SERIALIZED_NAME_STEPS)
  private List<XrayJsonImportExecutionSteps> steps = null;

  public XrayJsonImportExecutionTests() { 
  }

  public XrayJsonImportExecutionTests comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    this.comment = comment;
  }


  public XrayJsonImportExecutionTests finish(String finish) {
    
    this.finish = finish;
    return this;
  }

   /**
   * Get finish
   * @return finish
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFinish() {
    return finish;
  }


  public void setFinish(String finish) {
    this.finish = finish;
  }


  public XrayJsonImportExecutionTests start(String start) {
    
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStart() {
    return start;
  }


  public void setStart(String start) {
    this.start = start;
  }


  public XrayJsonImportExecutionTests status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public XrayJsonImportExecutionTests customFields(List<OneOfUpdateTestRunCustomFieldSingleUpdateTestRunCustomFieldMulti> customFields) {
    
    this.customFields = customFields;
    return this;
  }

  public XrayJsonImportExecutionTests addCustomFieldsItem(OneOfUpdateTestRunCustomFieldSingleUpdateTestRunCustomFieldMulti customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new ArrayList<>();
    }
    this.customFields.add(customFieldsItem);
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<OneOfUpdateTestRunCustomFieldSingleUpdateTestRunCustomFieldMulti> getCustomFields() {
    return customFields;
  }


  public void setCustomFields(List<OneOfUpdateTestRunCustomFieldSingleUpdateTestRunCustomFieldMulti> customFields) {
    this.customFields = customFields;
  }


  public XrayJsonImportExecutionTests testInfo(XrayJsonImportExecutionTestInfo testInfo) {
    
    this.testInfo = testInfo;
    return this;
  }

   /**
   * Get testInfo
   * @return testInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public XrayJsonImportExecutionTestInfo getTestInfo() {
    return testInfo;
  }


  public void setTestInfo(XrayJsonImportExecutionTestInfo testInfo) {
    this.testInfo = testInfo;
  }


  public XrayJsonImportExecutionTests testKey(String testKey) {
    
    this.testKey = testKey;
    return this;
  }

   /**
   * Get testKey
   * @return testKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTestKey() {
    return testKey;
  }


  public void setTestKey(String testKey) {
    this.testKey = testKey;
  }


  public XrayJsonImportExecutionTests executedBy(String executedBy) {
    
    this.executedBy = executedBy;
    return this;
  }

   /**
   * Get executedBy
   * @return executedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExecutedBy() {
    return executedBy;
  }


  public void setExecutedBy(String executedBy) {
    this.executedBy = executedBy;
  }


  public XrayJsonImportExecutionTests evidences(List<XrayJsonImportExecutionEvidences> evidences) {
    
    this.evidences = evidences;
    return this;
  }

  public XrayJsonImportExecutionTests addEvidencesItem(XrayJsonImportExecutionEvidences evidencesItem) {
    if (this.evidences == null) {
      this.evidences = new ArrayList<>();
    }
    this.evidences.add(evidencesItem);
    return this;
  }

   /**
   * Get evidences
   * @return evidences
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<XrayJsonImportExecutionEvidences> getEvidences() {
    return evidences;
  }


  public void setEvidences(List<XrayJsonImportExecutionEvidences> evidences) {
    this.evidences = evidences;
  }


  public XrayJsonImportExecutionTests results(List<XrayJsonImportExecutionResults> results) {
    
    this.results = results;
    return this;
  }

  public XrayJsonImportExecutionTests addResultsItem(XrayJsonImportExecutionResults resultsItem) {
    if (this.results == null) {
      this.results = new ArrayList<>();
    }
    this.results.add(resultsItem);
    return this;
  }

   /**
   * Get results
   * @return results
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<XrayJsonImportExecutionResults> getResults() {
    return results;
  }


  public void setResults(List<XrayJsonImportExecutionResults> results) {
    this.results = results;
  }


  public XrayJsonImportExecutionTests examples(List<String> examples) {
    
    this.examples = examples;
    return this;
  }

  public XrayJsonImportExecutionTests addExamplesItem(String examplesItem) {
    if (this.examples == null) {
      this.examples = new ArrayList<>();
    }
    this.examples.add(examplesItem);
    return this;
  }

   /**
   * Get examples
   * @return examples
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getExamples() {
    return examples;
  }


  public void setExamples(List<String> examples) {
    this.examples = examples;
  }


  public XrayJsonImportExecutionTests steps(List<XrayJsonImportExecutionSteps> steps) {
    
    this.steps = steps;
    return this;
  }

  public XrayJsonImportExecutionTests addStepsItem(XrayJsonImportExecutionSteps stepsItem) {
    if (this.steps == null) {
      this.steps = new ArrayList<>();
    }
    this.steps.add(stepsItem);
    return this;
  }

   /**
   * Get steps
   * @return steps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<XrayJsonImportExecutionSteps> getSteps() {
    return steps;
  }


  public void setSteps(List<XrayJsonImportExecutionSteps> steps) {
    this.steps = steps;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    XrayJsonImportExecutionTests xrayJsonImportExecutionTests = (XrayJsonImportExecutionTests) o;
    return Objects.equals(this.comment, xrayJsonImportExecutionTests.comment) &&
        Objects.equals(this.finish, xrayJsonImportExecutionTests.finish) &&
        Objects.equals(this.start, xrayJsonImportExecutionTests.start) &&
        Objects.equals(this.status, xrayJsonImportExecutionTests.status) &&
        Objects.equals(this.customFields, xrayJsonImportExecutionTests.customFields) &&
        Objects.equals(this.testInfo, xrayJsonImportExecutionTests.testInfo) &&
        Objects.equals(this.testKey, xrayJsonImportExecutionTests.testKey) &&
        Objects.equals(this.executedBy, xrayJsonImportExecutionTests.executedBy) &&
        Objects.equals(this.evidences, xrayJsonImportExecutionTests.evidences) &&
        Objects.equals(this.results, xrayJsonImportExecutionTests.results) &&
        Objects.equals(this.examples, xrayJsonImportExecutionTests.examples) &&
        Objects.equals(this.steps, xrayJsonImportExecutionTests.steps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(comment, finish, start, status, customFields, testInfo, testKey, executedBy, evidences, results, examples, steps);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class XrayJsonImportExecutionTests {\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    finish: ").append(toIndentedString(finish)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    testInfo: ").append(toIndentedString(testInfo)).append("\n");
    sb.append("    testKey: ").append(toIndentedString(testKey)).append("\n");
    sb.append("    executedBy: ").append(toIndentedString(executedBy)).append("\n");
    sb.append("    evidences: ").append(toIndentedString(evidences)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("    examples: ").append(toIndentedString(examples)).append("\n");
    sb.append("    steps: ").append(toIndentedString(steps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

