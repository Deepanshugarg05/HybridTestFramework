/*
 * Zephyr Scale Cloud API
 *  # Introduction  This is the **Zephyr Scale Cloud** API. If you are looking for the Server API, please refer to the [documentation](https://support.smartbear.com/zephyr-scale-server/docs/) for more information.  This API uses the OpenAPI specification. If you want to generate clients for different languages, please use the link above to download the API specification and use it with your preferred tools.  For feature requests or general support, please head to our [support site](https://smartbear.atlassian.net/servicedesk/customer/portal/42).  # Authentication The API authentication is based on JSON Web Token (JWT), which is a key for accessing the API. Authenticating using JWT requires the following steps: * Generate a key * Make authenticated requests  ## Generate a Key For accessing the API, you must generate an access key in Jira. To generate an access token, click on your profile picture at the page bottom left, and choose the option â€œZephyr Scale API keys\". For more information, please check out the [documentation](https://support.smartbear.com/zephyr-scale-cloud/docs/api-and-test-automation/generating-access-keys.html).  ## Accessing the API The API is available at the following base URL: ``` https://api.zephyrscale.smartbear.com/v2 ``` For example, the final URL for retrieving test cases would be: ``` https://api.zephyrscale.smartbear.com/v2/testcases ```  ## Making Authenticated Requests To authenticate subsequent API requests, you must provide a valid token in an HTTP header, which is the key generated on the previous step: ``` Authorization: Bearer {bearer_token} ``` # Representing Users  Previous API definitions used Atlassian User Keys to identify users. This parameter is deprecated because of privacy changes. Use Atlassian Account ID instead.   Atlassian Account IDs are globally unique opaque identifiers for identifying a user. Every Atlassian Account has a ID which is assigned when the account is created and is immutable. Account IDs contain no personally identifiable information and are only used to retrieve user information ondemand. This API does not return any user information other than the Account ID (with the exception of the deprecated user keys during the deprecation period). 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapi.zephyr.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapi.zephyr.model.TestScriptResultInput;

/**
 * TestExecutionInput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-28T00:21:27.203715400+11:00[Australia/Sydney]")
public class TestExecutionInput {
  public static final String SERIALIZED_NAME_PROJECT_KEY = "projectKey";
  @SerializedName(SERIALIZED_NAME_PROJECT_KEY)
  private String projectKey;

  public static final String SERIALIZED_NAME_TEST_CASE_KEY = "testCaseKey";
  @SerializedName(SERIALIZED_NAME_TEST_CASE_KEY)
  private String testCaseKey;

  public static final String SERIALIZED_NAME_TEST_CYCLE_KEY = "testCycleKey";
  @SerializedName(SERIALIZED_NAME_TEST_CYCLE_KEY)
  private String testCycleKey;

  public static final String SERIALIZED_NAME_STATUS_NAME = "statusName";
  @SerializedName(SERIALIZED_NAME_STATUS_NAME)
  private String statusName;

  public static final String SERIALIZED_NAME_TEST_SCRIPT_RESULTS = "testScriptResults";
  @SerializedName(SERIALIZED_NAME_TEST_SCRIPT_RESULTS)
  private List<TestScriptResultInput> testScriptResults = null;

  public static final String SERIALIZED_NAME_ENVIRONMENT_NAME = "environmentName";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_NAME)
  private String environmentName;

  public static final String SERIALIZED_NAME_ACTUAL_END_DATE = "actualEndDate";
  @SerializedName(SERIALIZED_NAME_ACTUAL_END_DATE)
  private OffsetDateTime actualEndDate;

  public static final String SERIALIZED_NAME_EXECUTION_TIME = "executionTime";
  @SerializedName(SERIALIZED_NAME_EXECUTION_TIME)
  private Long executionTime;

  public static final String SERIALIZED_NAME_EXECUTED_BY_ID = "executedById";
  @SerializedName(SERIALIZED_NAME_EXECUTED_BY_ID)
  private String executedById;

  public static final String SERIALIZED_NAME_ASSIGNED_TO_ID = "assignedToId";
  @SerializedName(SERIALIZED_NAME_ASSIGNED_TO_ID)
  private String assignedToId;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "customFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private Map<String, Object> customFields = null;

  public TestExecutionInput() { 
  }

  public TestExecutionInput projectKey(String projectKey) {
    
    this.projectKey = projectKey;
    return this;
  }

   /**
   * Jira project key.
   * @return projectKey
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "TIS", required = true, value = "Jira project key.")

  public String getProjectKey() {
    return projectKey;
  }


  public void setProjectKey(String projectKey) {
    this.projectKey = projectKey;
  }


  public TestExecutionInput testCaseKey(String testCaseKey) {
    
    this.testCaseKey = testCaseKey;
    return this;
  }

   /**
   * Key of test case the execution applies to. NOTE: Test cases with call to test, parameters and test data are not supported.
   * @return testCaseKey
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "SA-T10", required = true, value = "Key of test case the execution applies to. NOTE: Test cases with call to test, parameters and test data are not supported.")

  public String getTestCaseKey() {
    return testCaseKey;
  }


  public void setTestCaseKey(String testCaseKey) {
    this.testCaseKey = testCaseKey;
  }


  public TestExecutionInput testCycleKey(String testCycleKey) {
    
    this.testCycleKey = testCycleKey;
    return this;
  }

   /**
   * Key of test cycle the execution applies to.
   * @return testCycleKey
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "SA-R10", required = true, value = "Key of test cycle the execution applies to.")

  public String getTestCycleKey() {
    return testCycleKey;
  }


  public void setTestCycleKey(String testCycleKey) {
    this.testCycleKey = testCycleKey;
  }


  public TestExecutionInput statusName(String statusName) {
    
    this.statusName = statusName;
    return this;
  }

   /**
   * The status name.
   * @return statusName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Low", required = true, value = "The status name.")

  public String getStatusName() {
    return statusName;
  }


  public void setStatusName(String statusName) {
    this.statusName = statusName;
  }


  public TestExecutionInput testScriptResults(List<TestScriptResultInput> testScriptResults) {
    
    this.testScriptResults = testScriptResults;
    return this;
  }

  public TestExecutionInput addTestScriptResultsItem(TestScriptResultInput testScriptResultsItem) {
    if (this.testScriptResults == null) {
      this.testScriptResults = new ArrayList<>();
    }
    this.testScriptResults.add(testScriptResultsItem);
    return this;
  }

   /**
   * Get testScriptResults
   * @return testScriptResults
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<TestScriptResultInput> getTestScriptResults() {
    return testScriptResults;
  }


  public void setTestScriptResults(List<TestScriptResultInput> testScriptResults) {
    this.testScriptResults = testScriptResults;
  }


  public TestExecutionInput environmentName(String environmentName) {
    
    this.environmentName = environmentName;
    return this;
  }

   /**
   * Environment assigned to the test case.
   * @return environmentName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Chrome Latest Version", value = "Environment assigned to the test case.")

  public String getEnvironmentName() {
    return environmentName;
  }


  public void setEnvironmentName(String environmentName) {
    this.environmentName = environmentName;
  }


  public TestExecutionInput actualEndDate(OffsetDateTime actualEndDate) {
    
    this.actualEndDate = actualEndDate;
    return this;
  }

   /**
   * The actual end date of the test cycle. Format: yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;
   * @return actualEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-05-20T13:15:13Z", value = "The actual end date of the test cycle. Format: yyyy-MM-dd'T'HH:mm:ss'Z'")

  public OffsetDateTime getActualEndDate() {
    return actualEndDate;
  }


  public void setActualEndDate(OffsetDateTime actualEndDate) {
    this.actualEndDate = actualEndDate;
  }


  public TestExecutionInput executionTime(Long executionTime) {
    
    this.executionTime = executionTime;
    return this;
  }

   /**
   * Actual test execution time in milliseconds.
   * minimum: 0
   * @return executionTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "120000", value = "Actual test execution time in milliseconds.")

  public Long getExecutionTime() {
    return executionTime;
  }


  public void setExecutionTime(Long executionTime) {
    this.executionTime = executionTime;
  }


  public TestExecutionInput executedById(String executedById) {
    
    this.executedById = executedById;
    return this;
  }

   /**
   * Atlassian Account ID of the Jira user.
   * @return executedById
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5b10a2844c20165700ede21g", value = "Atlassian Account ID of the Jira user.")

  public String getExecutedById() {
    return executedById;
  }


  public void setExecutedById(String executedById) {
    this.executedById = executedById;
  }


  public TestExecutionInput assignedToId(String assignedToId) {
    
    this.assignedToId = assignedToId;
    return this;
  }

   /**
   * Atlassian Account ID of the Jira user.
   * @return assignedToId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5b10a2844c20165700ede21g", value = "Atlassian Account ID of the Jira user.")

  public String getAssignedToId() {
    return assignedToId;
  }


  public void setAssignedToId(String assignedToId) {
    this.assignedToId = assignedToId;
  }


  public TestExecutionInput comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * Comment added against overall test case execution.
   * @return comment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Test failed user could not login", value = "Comment added against overall test case execution.")

  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    this.comment = comment;
  }


  public TestExecutionInput customFields(Map<String, Object> customFields) {
    
    this.customFields = customFields;
    return this;
  }

  public TestExecutionInput putCustomFieldsItem(String key, Object customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new HashMap<>();
    }
    this.customFields.put(key, customFieldsItem);
    return this;
  }

   /**
   * Multi-line text fields should denote a new line with the \\&lt;br\\&gt; syntax. Dates should be in the format &#39;yyyy-MM-dd&#39;. Users should provided by the user ID. 
   * @return customFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"Build Number\":20,\"Release Date\":\"2020-01-01\",\"Pre-Condition(s)\":\"User should have logged in. <br> User should have navigated to the administration panel.\",\"Implemented\":false,\"Category\":[\"Performance\",\"Regression\"],\"Tester\":\"fa2e582e-5e15-521e-92e3-47e6ca2e7256\"}", value = "Multi-line text fields should denote a new line with the \\<br\\> syntax. Dates should be in the format 'yyyy-MM-dd'. Users should provided by the user ID. ")

  public Map<String, Object> getCustomFields() {
    return customFields;
  }


  public void setCustomFields(Map<String, Object> customFields) {
    this.customFields = customFields;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestExecutionInput testExecutionInput = (TestExecutionInput) o;
    return Objects.equals(this.projectKey, testExecutionInput.projectKey) &&
        Objects.equals(this.testCaseKey, testExecutionInput.testCaseKey) &&
        Objects.equals(this.testCycleKey, testExecutionInput.testCycleKey) &&
        Objects.equals(this.statusName, testExecutionInput.statusName) &&
        Objects.equals(this.testScriptResults, testExecutionInput.testScriptResults) &&
        Objects.equals(this.environmentName, testExecutionInput.environmentName) &&
        Objects.equals(this.actualEndDate, testExecutionInput.actualEndDate) &&
        Objects.equals(this.executionTime, testExecutionInput.executionTime) &&
        Objects.equals(this.executedById, testExecutionInput.executedById) &&
        Objects.equals(this.assignedToId, testExecutionInput.assignedToId) &&
        Objects.equals(this.comment, testExecutionInput.comment) &&
        Objects.equals(this.customFields, testExecutionInput.customFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(projectKey, testCaseKey, testCycleKey, statusName, testScriptResults, environmentName, actualEndDate, executionTime, executedById, assignedToId, comment, customFields);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestExecutionInput {\n");
    sb.append("    projectKey: ").append(toIndentedString(projectKey)).append("\n");
    sb.append("    testCaseKey: ").append(toIndentedString(testCaseKey)).append("\n");
    sb.append("    testCycleKey: ").append(toIndentedString(testCycleKey)).append("\n");
    sb.append("    statusName: ").append(toIndentedString(statusName)).append("\n");
    sb.append("    testScriptResults: ").append(toIndentedString(testScriptResults)).append("\n");
    sb.append("    environmentName: ").append(toIndentedString(environmentName)).append("\n");
    sb.append("    actualEndDate: ").append(toIndentedString(actualEndDate)).append("\n");
    sb.append("    executionTime: ").append(toIndentedString(executionTime)).append("\n");
    sb.append("    executedById: ").append(toIndentedString(executedById)).append("\n");
    sb.append("    assignedToId: ").append(toIndentedString(assignedToId)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

