/*
 * Zephyr Scale Cloud API
 *  # Introduction  This is the **Zephyr Scale Cloud** API. If you are looking for the Server API, please refer to the [documentation](https://support.smartbear.com/zephyr-scale-server/docs/) for more information.  This API uses the OpenAPI specification. If you want to generate clients for different languages, please use the link above to download the API specification and use it with your preferred tools.  For feature requests or general support, please head to our [support site](https://smartbear.atlassian.net/servicedesk/customer/portal/42).  # Authentication The API authentication is based on JSON Web Token (JWT), which is a key for accessing the API. Authenticating using JWT requires the following steps: * Generate a key * Make authenticated requests  ## Generate a Key For accessing the API, you must generate an access key in Jira. To generate an access token, click on your profile picture at the page bottom left, and choose the option â€œZephyr Scale API keys\". For more information, please check out the [documentation](https://support.smartbear.com/zephyr-scale-cloud/docs/api-and-test-automation/generating-access-keys.html).  ## Accessing the API The API is available at the following base URL: ``` https://api.zephyrscale.smartbear.com/v2 ``` For example, the final URL for retrieving test cases would be: ``` https://api.zephyrscale.smartbear.com/v2/testcases ```  ## Making Authenticated Requests To authenticate subsequent API requests, you must provide a valid token in an HTTP header, which is the key generated on the previous step: ``` Authorization: Bearer {bearer_token} ``` # Representing Users  Previous API definitions used Atlassian User Keys to identify users. This parameter is deprecated because of privacy changes. Use Atlassian Account ID instead.   Atlassian Account IDs are globally unique opaque identifiers for identifying a user. Every Atlassian Account has a ID which is assigned when the account is created and is immutable. Account IDs contain no personally identifiable information and are only used to retrieve user information ondemand. This API does not return any user information other than the Account ID (with the exception of the deprecated user keys during the deprecation period). 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapi.zephyr.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapi.zephyr.model.FolderLink;
import org.openapi.zephyr.model.JiraProjectVersion;
import org.openapi.zephyr.model.JiraUserLink;
import org.openapi.zephyr.model.ProjectLink;
import org.openapi.zephyr.model.StatusLink;
import org.openapi.zephyr.model.TestCycleLinkListWithTestPlanLinks;

/**
 * TestCycle
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-28T00:21:27.203715400+11:00[Australia/Sydney]")
public class TestCycle {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_KEY = "key";
  @SerializedName(SERIALIZED_NAME_KEY)
  private String key;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private ProjectLink project;

  public static final String SERIALIZED_NAME_JIRA_PROJECT_VERSION = "jiraProjectVersion";
  @SerializedName(SERIALIZED_NAME_JIRA_PROJECT_VERSION)
  private JiraProjectVersion jiraProjectVersion;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusLink status;

  public static final String SERIALIZED_NAME_FOLDER = "folder";
  @SerializedName(SERIALIZED_NAME_FOLDER)
  private FolderLink folder;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_PLANNED_START_DATE = "plannedStartDate";
  @SerializedName(SERIALIZED_NAME_PLANNED_START_DATE)
  private OffsetDateTime plannedStartDate;

  public static final String SERIALIZED_NAME_PLANNED_END_DATE = "plannedEndDate";
  @SerializedName(SERIALIZED_NAME_PLANNED_END_DATE)
  private OffsetDateTime plannedEndDate;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private JiraUserLink owner;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "customFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private Map<String, Object> customFields = null;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private TestCycleLinkListWithTestPlanLinks links;

  public TestCycle() { 
  }

  public TestCycle id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * minimum: 1
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public TestCycle key(String key) {
    
    this.key = key;
    return this;
  }

   /**
   * Unique key of the test cycle
   * @return key
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "SA-R40", required = true, value = "Unique key of the test cycle")

  public String getKey() {
    return key;
  }


  public void setKey(String key) {
    this.key = key;
  }


  public TestCycle name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the Test Cycle
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Sprint 1 Regression Test Cycle", required = true, value = "Name of the Test Cycle")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public TestCycle project(ProjectLink project) {
    
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public ProjectLink getProject() {
    return project;
  }


  public void setProject(ProjectLink project) {
    this.project = project;
  }


  public TestCycle jiraProjectVersion(JiraProjectVersion jiraProjectVersion) {
    
    this.jiraProjectVersion = jiraProjectVersion;
    return this;
  }

   /**
   * Get jiraProjectVersion
   * @return jiraProjectVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JiraProjectVersion getJiraProjectVersion() {
    return jiraProjectVersion;
  }


  public void setJiraProjectVersion(JiraProjectVersion jiraProjectVersion) {
    this.jiraProjectVersion = jiraProjectVersion;
  }


  public TestCycle status(StatusLink status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public StatusLink getStatus() {
    return status;
  }


  public void setStatus(StatusLink status) {
    this.status = status;
  }


  public TestCycle folder(FolderLink folder) {
    
    this.folder = folder;
    return this;
  }

   /**
   * Get folder
   * @return folder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FolderLink getFolder() {
    return folder;
  }


  public void setFolder(FolderLink folder) {
    this.folder = folder;
  }


  public TestCycle description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description outlining the scope.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Regression test cycle 1 to ensure no breaking changes", value = "Description outlining the scope.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public TestCycle plannedStartDate(OffsetDateTime plannedStartDate) {
    
    this.plannedStartDate = plannedStartDate;
    return this;
  }

   /**
   * Planned start date of the test cycle. Format: yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;
   * @return plannedStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-05-19T13:15:13Z", value = "Planned start date of the test cycle. Format: yyyy-MM-dd'T'HH:mm:ss'Z'")

  public OffsetDateTime getPlannedStartDate() {
    return plannedStartDate;
  }


  public void setPlannedStartDate(OffsetDateTime plannedStartDate) {
    this.plannedStartDate = plannedStartDate;
  }


  public TestCycle plannedEndDate(OffsetDateTime plannedEndDate) {
    
    this.plannedEndDate = plannedEndDate;
    return this;
  }

   /**
   * The planned end date of the test cycle. Format: yyyy-MM-dd&#39;T&#39;HH:mm:ss&#39;Z&#39;
   * @return plannedEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-05-20T13:15:13Z", value = "The planned end date of the test cycle. Format: yyyy-MM-dd'T'HH:mm:ss'Z'")

  public OffsetDateTime getPlannedEndDate() {
    return plannedEndDate;
  }


  public void setPlannedEndDate(OffsetDateTime plannedEndDate) {
    this.plannedEndDate = plannedEndDate;
  }


  public TestCycle owner(JiraUserLink owner) {
    
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JiraUserLink getOwner() {
    return owner;
  }


  public void setOwner(JiraUserLink owner) {
    this.owner = owner;
  }


  public TestCycle customFields(Map<String, Object> customFields) {
    
    this.customFields = customFields;
    return this;
  }

  public TestCycle putCustomFieldsItem(String key, Object customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new HashMap<>();
    }
    this.customFields.put(key, customFieldsItem);
    return this;
  }

   /**
   * Multi-line text fields should denote a new line with the \\&lt;br\\&gt; syntax. Dates should be in the format &#39;yyyy-MM-dd&#39;. Users should provided by the user ID. 
   * @return customFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"Build Number\":20,\"Release Date\":\"2020-01-01\",\"Pre-Condition(s)\":\"User should have logged in. <br> User should have navigated to the administration panel.\",\"Implemented\":false,\"Category\":[\"Performance\",\"Regression\"],\"Tester\":\"fa2e582e-5e15-521e-92e3-47e6ca2e7256\"}", value = "Multi-line text fields should denote a new line with the \\<br\\> syntax. Dates should be in the format 'yyyy-MM-dd'. Users should provided by the user ID. ")

  public Map<String, Object> getCustomFields() {
    return customFields;
  }


  public void setCustomFields(Map<String, Object> customFields) {
    this.customFields = customFields;
  }


  public TestCycle links(TestCycleLinkListWithTestPlanLinks links) {
    
    this.links = links;
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TestCycleLinkListWithTestPlanLinks getLinks() {
    return links;
  }


  public void setLinks(TestCycleLinkListWithTestPlanLinks links) {
    this.links = links;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestCycle testCycle = (TestCycle) o;
    return Objects.equals(this.id, testCycle.id) &&
        Objects.equals(this.key, testCycle.key) &&
        Objects.equals(this.name, testCycle.name) &&
        Objects.equals(this.project, testCycle.project) &&
        Objects.equals(this.jiraProjectVersion, testCycle.jiraProjectVersion) &&
        Objects.equals(this.status, testCycle.status) &&
        Objects.equals(this.folder, testCycle.folder) &&
        Objects.equals(this.description, testCycle.description) &&
        Objects.equals(this.plannedStartDate, testCycle.plannedStartDate) &&
        Objects.equals(this.plannedEndDate, testCycle.plannedEndDate) &&
        Objects.equals(this.owner, testCycle.owner) &&
        Objects.equals(this.customFields, testCycle.customFields) &&
        Objects.equals(this.links, testCycle.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, key, name, project, jiraProjectVersion, status, folder, description, plannedStartDate, plannedEndDate, owner, customFields, links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestCycle {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    jiraProjectVersion: ").append(toIndentedString(jiraProjectVersion)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    folder: ").append(toIndentedString(folder)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    plannedStartDate: ").append(toIndentedString(plannedStartDate)).append("\n");
    sb.append("    plannedEndDate: ").append(toIndentedString(plannedEndDate)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

