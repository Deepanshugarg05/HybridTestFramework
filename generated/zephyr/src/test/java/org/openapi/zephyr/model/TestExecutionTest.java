/*
 * Zephyr Scale Cloud API
 *  # Introduction  This is the **Zephyr Scale Cloud** API. If you are looking for the Server API, please refer to the [documentation](https://support.smartbear.com/zephyr-scale-server/docs/) for more information.  This API uses the OpenAPI specification. If you want to generate clients for different languages, please use the link above to download the API specification and use it with your preferred tools.  For feature requests or general support, please head to our [support site](https://smartbear.atlassian.net/servicedesk/customer/portal/42).  # Authentication The API authentication is based on JSON Web Token (JWT), which is a key for accessing the API. Authenticating using JWT requires the following steps: * Generate a key * Make authenticated requests  ## Generate a Key For accessing the API, you must generate an access key in Jira. To generate an access token, click on your profile picture at the page bottom left, and choose the option â€œZephyr Scale API keys\". For more information, please check out the [documentation](https://support.smartbear.com/zephyr-scale-cloud/docs/api-and-test-automation/generating-access-keys.html).  ## Accessing the API The API is available at the following base URL: ``` https://api.zephyrscale.smartbear.com/v2 ``` For example, the final URL for retrieving test cases would be: ``` https://api.zephyrscale.smartbear.com/v2/testcases ```  ## Making Authenticated Requests To authenticate subsequent API requests, you must provide a valid token in an HTTP header, which is the key generated on the previous step: ``` Authorization: Bearer {bearer_token} ``` # Representing Users  Previous API definitions used Atlassian User Keys to identify users. This parameter is deprecated because of privacy changes. Use Atlassian Account ID instead.   Atlassian Account IDs are globally unique opaque identifiers for identifying a user. Every Atlassian Account has a ID which is assigned when the account is created and is immutable. Account IDs contain no personally identifiable information and are only used to retrieve user information ondemand. This API does not return any user information other than the Account ID (with the exception of the deprecated user keys during the deprecation period). 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapi.zephyr.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapi.zephyr.model.EnvironmentLink;
import org.openapi.zephyr.model.ProjectLink;
import org.openapi.zephyr.model.StatusLink;
import org.openapi.zephyr.model.TestCaseVersionLink;
import org.openapi.zephyr.model.TestCycleLink;
import org.openapi.zephyr.model.TestExecutionLinkList;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for TestExecution
 */
public class TestExecutionTest {
    private final TestExecution model = new TestExecution();

    /**
     * Model tests for TestExecution
     */
    @Test
    public void testTestExecution() {
        // TODO: test TestExecution
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'key'
     */
    @Test
    public void keyTest() {
        // TODO: test key
    }

    /**
     * Test the property 'project'
     */
    @Test
    public void projectTest() {
        // TODO: test project
    }

    /**
     * Test the property 'testCase'
     */
    @Test
    public void testCaseTest() {
        // TODO: test testCase
    }

    /**
     * Test the property 'environment'
     */
    @Test
    public void environmentTest() {
        // TODO: test environment
    }

    /**
     * Test the property 'testExecutionStatus'
     */
    @Test
    public void testExecutionStatusTest() {
        // TODO: test testExecutionStatus
    }

    /**
     * Test the property 'actualEndDate'
     */
    @Test
    public void actualEndDateTest() {
        // TODO: test actualEndDate
    }

    /**
     * Test the property 'estimatedTime'
     */
    @Test
    public void estimatedTimeTest() {
        // TODO: test estimatedTime
    }

    /**
     * Test the property 'executionTime'
     */
    @Test
    public void executionTimeTest() {
        // TODO: test executionTime
    }

    /**
     * Test the property 'executedById'
     */
    @Test
    public void executedByIdTest() {
        // TODO: test executedById
    }

    /**
     * Test the property 'assignedToId'
     */
    @Test
    public void assignedToIdTest() {
        // TODO: test assignedToId
    }

    /**
     * Test the property 'comment'
     */
    @Test
    public void commentTest() {
        // TODO: test comment
    }

    /**
     * Test the property 'automated'
     */
    @Test
    public void automatedTest() {
        // TODO: test automated
    }

    /**
     * Test the property 'testCycle'
     */
    @Test
    public void testCycleTest() {
        // TODO: test testCycle
    }

    /**
     * Test the property 'customFields'
     */
    @Test
    public void customFieldsTest() {
        // TODO: test customFields
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        // TODO: test links
    }

}
